======================
Personal Notes
======================
Docs:
https://docs.nestjs.com/


To start the project in dev mode run:
yarn start:dev

===============
Modules
===============
Docs:
https://docs.nestjs.com/modules

Modules organize the and and declared with a class annotated
by a decorator module.

Modules allow us to break the app into smaller component

1. Auth Module
For the first time it's better to learn to create it on your own not by generator.
The Auth Module will be stored in auth folder

auth
|- auth.module.ts => the auth module file

2. User module
To generate the module, you can use this command:
nest g module user

After the module generated, it will be auto imported in app module

user
|- user.module.ts => user module file

3. Bookmark module
To generate the module, you can use this command:
nest g module bookmark

After the module generated, it will be auto imported in app module

bookmark
|- bookmark.module.ts => bookmark module file

===========================
How Request is handled
===========================
For example the controller received a POST request from the internet asking to login a user.
Then it's going to call a function from the auth.service then return its response back to the client.

But to do so, auth controller have to instantiate an auth service class (cause in the end it's JS).
To avoid the instantiate process using new like usual, we use depedency injection. It means instead
of the controller to declare it.

You just have to write the service name with private(you can see it on the code). That's how we do
it on nest JS.

example if you want to call the test function inside the service:
this.authService.test();

==================
Controllers
==================

Docs:
https://docs.nestjs.com/controllers

Responsible to handle incoming request and returning responses to client

For creating the logic, it will be separated to Controllers and Providers

1. Auth Controllers
For the first time it's better to learn to create it on your own not by generator.
The Auth Controllers will be stored in auth folder. Don't forget to import em later

auth
|- auth.controller.ts => the auth controller file


===================
Providers/Services
===================

Docs:
https://docs.nestjs.com/providers

Responsible for executing the business logic

For creating the logic, it will be separated to Controllers and Providers

1. Auth Services
For the first time it's better to learn to create it on your own not by generator.
The Auth Services will be stored in auth folder. Don't forget to import em later

auth
|- auth.service.ts => the auth Services file
